{"version":3,"file":"Tilemap.js","sourceRoot":"","sources":["Tilemap.ts"],"names":[],"mappings":"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","sourcesContent":["let fs = require('fs');\nimport Layer = require('./Layer');\nimport Tileset = require('./Tileset');\nenum Orientation {\n    ORTHOGONAL,\n    ISOMETRIC,\n    STAGGERED,\n    HEXAGONAL\n}\nenum RenderOrder{\n    RIGHT_DOWN,\n    RIGHT_UP,\n    LEFT_DOWN,\n    LEFT_UP\n}\nclass Tilemap{\n\n    version:number;\n    orientation:Orientation;\n    renderorder:RenderOrder;\n    xTileCount:number;\n    yTileCound:number;\n    tilewidth:number = 0;\n    tileheight:number = 0;\n    nextObjectID:number;\n    public layers:Layer[] = [];\n    tilesets:Tileset[] = [];\n    public static totalTileCount = 0;\n\n    constructor(filepath?:string){\n        if(!filepath) return;\n        let self = this;\n    if(filepath !== undefined || filepath !== \"\"){\n        this.readFile(filepath);\n    }\n}\n    readFile(filepath){\n        let mapData = JSON.parse(fs.readFileSync(filepath,\"utf8\"));\n        console.log(mapData);\n\n        this.version        = mapData.version || 1;\n\n        switch (mapData.orientation){\n            case \"orthogonal\":\n                this.orientation = Orientation.ORTHOGONAL;\n                break;\n            case \"isometric\":\n                this.orientation = Orientation.ISOMETRIC;\n                break;\n            case \"staggered\":\n                this.orientation = Orientation.STAGGERED;\n                break;\n            case \"hexagonal\":\n                this.orientation = Orientation.HEXAGONAL;\n                break;\n            default:\n                this.orientation = Orientation.ORTHOGONAL;\n        }\n\n        switch (mapData.renderorder){\n            case \"right-down\":\n                this.renderorder = RenderOrder.RIGHT_DOWN;\n                break;\n            case \"right-up\":\n                this.renderorder = RenderOrder.RIGHT_UP;\n                break;\n            case \"left-down\":\n                this.renderorder = RenderOrder.LEFT_DOWN;\n                break;\n            case \"left-up\":\n                this.renderorder = RenderOrder.LEFT_UP;\n                break;\n            default:\n                this.renderorder = RenderOrder.RIGHT_DOWN;\n                break;\n        }\n\n        this.nextObjectID   = mapData.nextobjectid || 1;\n        this.xTileCount     = mapData.width || 50;\n        this.yTileCound     = mapData.height || 50;\n        this.tileheight     = mapData.tileheight || 32;\n        this.tilewidth      = mapData.tilewidth || 32;\n\n        for(let i=0;i<mapData.layers.length;i++){\n                this.layers[i] = new Layer(mapData.layers[i],this);\n        }\n        for(let i=0;i<mapData.tilesets.length;i++){\n           this.tilesets[i] = new Tileset(mapData.tilesets[i]);\n            Tilemap.totalTileCount += this.tilesets[i].tilecount;\n        }\n    }\n\n}\nexport = Tilemap;"]}
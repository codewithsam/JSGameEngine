{"version":3,"file":"Display.js","sourceRoot":"","sources":["Display.ts"],"names":[],"mappings":";AACO,iDAAW,CAAwB;AAC1C,IAAO,OAAO,WAAW,mBAAmB,CAAC,CAAC;AAE9C;IAMI,iBAAY,KAAK,EAAC,MAAM,EAAC,GAAG;QAHpB,WAAM,GAAG,EAAE,CAAC;QAIhB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IAE5B,CAAC;IAED,+BAAa,GAAb,UAAc,GAAG;QACb,IAAI,CAAC,OAAO,GAAG,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,KAAK,EAAC,KAAK;YAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,iBAAe,KAAK,CAAC,IAAI,iBAAY,IAAI,CAAC,KAAK,kBAAa,IAAI,CAAC,MAAM,gBAAa,CAAC,CAAC;YAC3G,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,GAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC9C,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QAClE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAClB,CAAC;IACM,mBAAW,GAAlB,UAAmB,EAAE;QACjB,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAChC,CAAC;IApBa,gBAAQ,GAAG,EAAE,CAAC;IAsBhC,cAAC;AAAD,CAAC,AA1BD,IA0BC;AACD,iBAAS,OAAO,CAAC","sourcesContent":["import Tileset = require(\"./TileMap/Tileset\");\nconst {ipcRenderer} = require('electron');\nimport Tilemap = require(\"./TileMap/Tilemap\");\n\nclass Display{\n    private width:number;\n    private  height:number;\n    private canvas = [];\n    public static graphics = [];\n    tilemap:Tilemap;\n    constructor(width,height,src){\n        this.width = width;\n        this.height = height;\n        this.createDisplay(src);\n\n    }\n\n    createDisplay(src){\n        this.tilemap = new Tilemap(src);\n        this.tilemap.layers.forEach(function (layer,index) {\n            console.log(layer.data);\n            $(\".wrapper\").append(`<canvas id='${layer.name}' width='${this.width}' height='${this.height}'></canvas>`);\n            this.canvas[index] = $('#'+layer.name).get(0);\n            Display.graphics[index] = this.canvas[index].getContext('2d');\n        }.bind(this));\n    }\n    static getGraphics(id){\n        return Display.graphics[id];\n    }\n\n}\nexport = Display;"]}